{
  "extends": "@vue/tsconfig/tsconfig.web.json",
  "include": ["env.d.ts", "src/**/*", "src/**/*.vue"],
  "exclude": ["src/**/__tests__/*", ".eslintrc.cjs"],
  "compilerOptions": {
    "composite": true,
    "baseUrl": ".",
    "paths": {
      "@/*": ["./src/*"]
    },
    "strict": true,
    "noImplicitAny": true,
    /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    "noImplicitThis": true,
    /* Enable error reporting when 'this' is given the type 'any'. */
    "useUnknownInCatchVariables": true,
    /* Default catch clause variables as 'unknown' instead of 'any'. */
    "alwaysStrict": true,
    /* Ensure 'use strict' is always emitted. */
    "noUnusedLocals": true,
    /* Enable error reporting when local variables aren't read. */
    "noUnusedParameters": true,
    /* Raise an error when a function parameter isn't read. */
    "exactOptionalPropertyTypes": true,
    /* Interpret optional property types as written, rather than adding 'undefined'. */
    "noImplicitReturns": true,
    /* Enable error reporting for codepaths that do not explicitly return in a function. */
    "noFallthroughCasesInSwitch": true,
    /* Enable error reporting for fallthrough cases in switch statements. */
    "noUncheckedIndexedAccess": true,
    /* Add 'undefined' to a type when accessed using an index. */
    "noImplicitOverride": true,
    /* Ensure overriding members in derived classes are marked with an override modifier. */
    "noPropertyAccessFromIndexSignature": true,
    /* Enforces using indexed accessors for keys declared using an indexed type. */
    "allowUnusedLabels": false,
    /* Disable error reporting for unused labels. */
    "allowUnreachableCode": false,
    /* Disable error reporting for unreachable code. */
    /* Completeness */
    "skipDefaultLibCheck": true,
    /* Skip type checking .d.ts files that are included with TypeScript. */
    "skipLibCheck": true
  }
}
